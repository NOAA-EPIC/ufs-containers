FROM noaaepic/ubuntu20.04-base-intel:develop
WORKDIR /opt/spack-stack


RUN git remote add emc https://github.com/NOAA-EMC/spack-stack.git && git remote update && git checkout emc/release/1.2.0 && \
    cd spack && git stash && cd .. && git submodule init &&  git submodule sync &&  git submodule update && git submodule foreach git submodule init && \
    git submodule foreach git submodule sync &&  git submodule foreach git submodule update && cd spack && git stash pop && cd .. && \
    mkdir -p /opt/spack-stack/configs/sites/ubuntu-intel && \
    cp /root/.spack/linux/compilers.yaml /opt/spack-stack/configs/sites/ubuntu-intel && ls -l /opt/spack-stack/configs/sites/ubuntu-intel && \
    find /opt/spack-stack/spack/opt/spack/ -iname intel-oneapi-mpi* && \
    loc=`find /opt/spack-stack/spack/opt/spack/ -iname intel-oneapi-mpi* | head -n 1` && \
    echo $loc && \
    echo "config:" > /opt/spack-stack/configs/sites/ubuntu-intel/config.yaml && \
    echo "  build_jobs: 8" >> /opt/spack-stack/configs/sites/ubuntu-intel/config.yaml && \
    echo "modules:" > /opt/spack-stack/configs/sites/ubuntu-intel/modules.yaml && \
    echo "  default:" >> /opt/spack-stack/configs/sites/ubuntu-intel/modules.yaml && \
    echo "    enable::" >> /opt/spack-stack/configs/sites/ubuntu-intel/modules.yaml && \
    echo "    - lmod" >> /opt/spack-stack/configs/sites/ubuntu-intel/modules.yaml && \
    echo "packages:" > /opt/spack-stack/configs/sites/ubuntu-intel/packages.yaml && \
    echo "  all:" >> /opt/spack-stack/configs/sites/ubuntu-intel/packages.yaml && \
    echo "    compiler:: [intel@2021.6.0]" >> /opt/spack-stack/configs/sites/ubuntu-intel/packages.yaml && \
    echo "    providers:" >> /opt/spack-stack/configs/sites/ubuntu-intel/packages.yaml && \
    echo "      mpi:: [intel-oneapi-mpi@2021.6.0]" >> /opt/spack-stack/configs/sites/ubuntu-intel/packages.yaml && \
    echo "  mpi:" >> /opt/spack-stack/configs/sites/ubuntu-intel/packages.yaml && \
    echo "    buildable: False" >> /opt/spack-stack/configs/sites/ubuntu-intel/packages.yaml && \
    echo "  intel-oneapi-mpi:" >> /opt/spack-stack/configs/sites/ubuntu-intel/packages.yaml && \
    echo "    externals:" >> /opt/spack-stack/configs/sites/ubuntu-intel/packages.yaml && \
    echo "    - spec: intel-oneapi-mpi@2021.6.0" >> /opt/spack-stack/configs/sites/ubuntu-intel/packages.yaml && \
    echo "      modules:" >> /opt/spack-stack/configs/sites/ubuntu-intel/packages.yaml && \
    echo "      - impi/2021.6.0" >> /opt/spack-stack/configs/sites/ubuntu-intel/packages.yaml && \
    echo "      prefix: $loc" >> /opt/spack-stack/configs/sites/ubuntu-intel/packages.yaml
RUN apt update && apt install -y libboost1.71-dev &&\
    apt install -y libboost-chrono1.71-dev &&\
    apt install -y libboost-date-time1.71-dev &&\
    apt install -y libboost-exception1.71-dev &&\
    apt install -y libboost-filesystem1.71-dev &&\
    apt install -y libboost-program-options1.71-dev &&\
    apt install -y libboost-python1.71-dev &&\
    apt install -y libboost-regex1.71-dev &&\
    apt install -y libboost-serialization1.71-dev &&\
    apt install -y libboost-system1.71-dev &&\
    apt install -y libboost-test1.71-dev &&\
    apt install -y libboost-thread1.71-dev &&\
    apt install -y libboost-timer1.71-dev && \
    apt install -y python3.8-venv
#RUN . ./setup.sh && spack external find boost && spack stack create env --site ubuntu-intel --template skylab-3.0.0 --name landda && \
RUN echo "new2"
COPY landda.specs /opt/spack-stack
RUN . ./setup.sh && spack compiler rm gcc@9.4.0 && spack external find boost && spack stack create env --site ubuntu-intel --template empty --name landda && \
    sed -i 's/\[\]//g' envs/landda/spack.yaml && \
    cat landda.specs >> envs/landda/spack.yaml && \
    cat envs/landda/site/compilers.yaml | head -n 14 > comp.yaml && cp comp.yaml envs/landda/site/compilers.yaml && \
    spack env activate envs/landda && \ 
    sed -i '329 a variant("ensurepip", default=True, description="Doesnt do anything")' /opt/spack-stack/spack/var/spack/repos/builtin/packages/python/package.py && \
    sed -i 's/^variant/    variant/g' /opt/spack-stack/spack/var/spack/repos/builtin/packages/python/package.py && \
    spack concretize  && \
    spack install
ENV SHELL=/bin/bash
RUN . ./setup.sh && source /usr/share/lmod/lmod/init/bash && \
    spack env activate envs/landda && \ 
    ln -s /usr/bin/python3 /usr/bin/python && \
    spack stack setup-meta-modules && \
    spack module lmod refresh -y && \
    module use /opt/spack-stack/envs/landda/install/modulefiles/Core && \
    module avail && \
    ls -l /opt/spack-stack/envs/landda/install/modulefiles/Core && \
    sed -i 's/impi/intel-oneapi-mpi/g' /opt/spack-stack/envs/landda/install/modulefiles/intel/2021.6.0/stack-intel-oneapi-mpi/2021.6.0.lua && \
    find /opt/spack-stack/envs/landda/install/modulefiles -iname "*.lua" | xargs grep -l depends_on | xargs sed -i 's/depends_on/-- depends_on/g' && \
    echo "module use /opt/spack-stack/envs/landda/install/modulefiles/Core" >> /root/.bashenv && \
    echo "module load stack-intel stack-intel-oneapi-mpi" >> /root/.bashenv && \
    source /root/.bashenv && \
    module spider >& mods && grep ": " mods | awk -F ":" '{print "module load " $2}' | grep -v intel >> /root/.bashenv && \
    sed -i '/ca-cert/d' /root/.bashenv && \
    echo "[[ -s ~/.bashenv ]] && source ~/.bashenv" >> /root/.bash_profile && \
    echo "[[ -s ~/.bashenv ]] && source ~/.bashenv" >> /root/.bashrc && \
    echo "DONE"
RUN source /root/.bashenv && module list && \
    echo "ENV MODULEPATH=$MODULEPATH" >> locenvs && \
    echo "ENV FI_PROVIDER_PATH=$FI_PROVIDER_PATH" >> locenvs && \
    echo "ENV LMOD_DEFAULT_MODULEPATH=$LMOD_DEFAULT_MODULEPATH" >> locenvs && \
    echo "ENV LMOD_PKG=$LMOD_PKG" >> locenvs && \
    echo "ENV LMOD_CMD=$LMOD_CMD" >> locenvs && \
    echo "ENV LMOD_DIR=$LMOD_DIR" >> locenvs && \
    echo "ENV MODULESHOME=$MODULESHOME" >> locenvs && \
    echo "ENV CMAKE_PREFIX_PATH=$CMAKE_PREFIX_PATH" >> locenvs && \
    echo "ENV CC=$CC" >> locenvs && \
    echo "ENV CXX=$CXX" >> locenvs && \
    echo "ENV FC=$FC" >> locenvs && \
    cp ~/.bashenv /opt/spack-stack
WORKDIR /opt
ADD fv3-bundle.tar.gz /opt
ADD build.tar.gz /opt
