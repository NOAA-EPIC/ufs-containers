FROM noaaepic/ubuntu20.04-base-intel:release-v1.3.0
WORKDIR /opt/spack-stack/spack-stack-1.3.0

RUN git config --global --add safe.directory /opt/spack-stack/spack-stack-1.3.0
RUN git config --global --add safe.directory /opt/spack-stack/spack-stack-1.3.0/spack
RUN git remote update && git checkout release/1.3.0 && git pull origin release/1.3.0
RUN git submodule sync && git submodule update 
#ADD spack-mirror.tar.gz /opt
#RUN wget https://epic-sandbox-srw.s3.amazonaws.com/spack-mirror.tar.gz && tar xvfz spack-mirror.tar.gz && rm spack-mirror.tar.gz
RUN apt update && apt -y install libcurl4-openssl-dev texinfo libmysqlclient-dev freetype2-demos libbz2-dev
RUN source ./setup.sh && \
    sed -i s/"'%apple-clang', '%gcc', //g"  configs/templates/unified-dev/spack.yaml && \
    mkdir -p /opt/spack-stack/spack-stack-1.3.0/configs/sites/ubuntu-intel && \
    cp /root/.spack/linux/compilers.yaml /opt/spack-stack/spack-stack-1.3.0/configs/sites/ubuntu-intel && ls -l /opt/spack-stack/spack-stack-1.3.0/configs/sites/ubuntu-intel && \
    find /opt/spack-stack/spack-stack-1.3.0/spack/opt/spack/ -iname intel-oneapi-mpi* && \
    loc=`find /opt/spack-stack/spack-stack-1.3.0/spack/opt/spack/ -iname intel-oneapi-mpi* | head -n 1` && \
    mpiver=`spack find intel-oneapi-mpi | grep intel-oneapi-mpi | awk -F "@" '{print $2}'` && \
    compver=`spack find intel-oneapi-compilers | grep intel-oneapi-compilers | awk -F "@" '{print $2}'` && \
    echo "config:" > /opt/spack-stack/spack-stack-1.3.0/configs/sites/ubuntu-intel/config.yaml && \
    echo "  build_jobs: 8" >> /opt/spack-stack/spack-stack-1.3.0/configs/sites/ubuntu-intel/config.yaml && \
    echo "modules:" > /opt/spack-stack/spack-stack-1.3.0/configs/sites/ubuntu-intel/modules.yaml && \
    echo "  default:" >> /opt/spack-stack/spack-stack-1.3.0/configs/sites/ubuntu-intel/modules.yaml && \
    echo "    enable::" >> /opt/spack-stack/spack-stack-1.3.0/configs/sites/ubuntu-intel/modules.yaml && \
    echo "    - lmod" >> /opt/spack-stack/spack-stack-1.3.0/configs/sites/ubuntu-intel/modules.yaml && \
    echo "packages:" > /opt/spack-stack/spack-stack-1.3.0/configs/sites/ubuntu-intel/packages.yaml && \
    echo "  all:" >> /opt/spack-stack/spack-stack-1.3.0/configs/sites/ubuntu-intel/packages.yaml && \
    echo "    compiler:: [intel@$compver]" >> /opt/spack-stack/spack-stack-1.3.0/configs/sites/ubuntu-intel/packages.yaml && \
    echo "    providers:" >> /opt/spack-stack/spack-stack-1.3.0/configs/sites/ubuntu-intel/packages.yaml && \
    echo "      mpi:: [intel-oneapi-mpi@$mpiver]" >> /opt/spack-stack/spack-stack-1.3.0/configs/sites/ubuntu-intel/packages.yaml && \
    echo "  mpi:" >> /opt/spack-stack/spack-stack-1.3.0/configs/sites/ubuntu-intel/packages.yaml && \
    echo "    buildable: False" >> /opt/spack-stack/spack-stack-1.3.0/configs/sites/ubuntu-intel/packages.yaml && \
    echo "  intel-oneapi-mpi:" >> /opt/spack-stack/spack-stack-1.3.0/configs/sites/ubuntu-intel/packages.yaml && \
    echo "    externals:" >> /opt/spack-stack/spack-stack-1.3.0/configs/sites/ubuntu-intel/packages.yaml && \
    echo "    - spec: intel-oneapi-mpi@$mpiver" >> /opt/spack-stack/spack-stack-1.3.0/configs/sites/ubuntu-intel/packages.yaml && \
    echo "      modules:" >> /opt/spack-stack/spack-stack-1.3.0/configs/sites/ubuntu-intel/packages.yaml && \
    echo "      - impi/$mpiver" >> /opt/spack-stack/spack-stack-1.3.0/configs/sites/ubuntu-intel/packages.yaml && \
    echo "      prefix: $loc" >> /opt/spack-stack/spack-stack-1.3.0/configs/sites/ubuntu-intel/packages.yaml
RUN echo "add line" && sed -i 's/cmake\/3.22.1//g' /root/.bashenv 
RUN . ./setup.sh && spack compiler rm gcc@9.4.0 && spack external find --all && spack stack create env --site ubuntu-intel --template unified-dev --name unified-dev && \
    cat envs/unified-dev/site/compilers.yaml | head -n 14 > comp.yaml && cp comp.yaml envs/unified-dev/site/compilers.yaml && \
    sed -i 's/2023.0.0/2021.8.0/g' envs/unified-dev/site/packages.yaml && \
    spack env activate envs/unified-dev && \ 
    spack concretize  && mkdir /usr/bin/info && \
    echo "done"
COPY unified.pub /opt/spack-stack/spack-stack-1.3.0
COPY unified.private /opt/spack-stack/spack-stack-1.3.0
RUN source ./setup.sh && spack env activate envs/unified-dev && \
     spack install  --no-check-signature --no-checksum |& tee install.log ; exit 0
#    spack mirror add unified file:/opt/spack-mirror && spack gpg trust unified.pub && spack install --no-check-signature --no-checksum && exit 0 
ENV SHELL=/bin/bash
RUN . ./setup.sh && source /usr/share/lmod/lmod/init/bash && \
    mpiver=`spack find intel-oneapi-mpi | grep intel-oneapi-mpi | awk -F "@" '{print $2}'` && \
    compver=`spack find intel-oneapi-compilers | grep intel-oneapi-compilers | awk -F "@" '{print $2}'` && \
    echo $mpiver && echo $compver && \
    spack env activate envs/unified-dev && \ 
    ln -s /usr/bin/python3 /usr/bin/python && \
    sed -i 's/2023.0.0/2021.8.0/g' envs/unified-dev/site/packages.yaml && \
    spack stack setup-meta-modules && \
    spack module lmod refresh -y && \
    module use /opt/spack-stack/spack-stack-1.3.0/envs/unified-dev/install/modulefiles/Core && \
    module avail && \
    ls -l /opt/spack-stack/spack-stack-1.3.0/envs/unified-dev/install/modulefiles/Core && \
    sed -i 's/impi/intel-oneapi-mpi/g' /opt/spack-stack/spack-stack-1.3.0/envs/unified-dev/install/modulefiles/intel/*/stack-intel-oneapi-mpi/*.lua && \
    find /opt/spack-stack/spack-stack-1.3.0/envs/unified-dev/install/modulefiles -iname "*.lua" | xargs grep -l depends_on | xargs sed -i 's/depends_on/-- depends_on/g' && \
    echo "module use /opt/spack-stack/spack-stack-1.3.0/envs/unified-dev/install/modulefiles/Core" >> /root/.bashenv && \
    echo "module load stack-intel stack-intel-oneapi-mpi" >> /root/.bashenv && \
    source /root/.bashenv && \
#   module spider >& mods && grep ": " mods | awk -F ":" '{print "module load " $2}' | grep -v intel >> /root/.bashenv && \
#   sed -i '/ca-cert/d' /root/.bashenv && \
    echo "[[ -s ~/.bashenv ]] && source ~/.bashenv" >> /root/.bash_profile && \
    echo "[[ -s ~/.bashenv ]] && source ~/.bashenv" >> /root/.bashrc && \
    cp ~/.bashenv /opt/spack-stack/spack-stack-1.3.0 && \
    echo "DONE2" 
WORKDIR /opt/spack-stack/spack-stack-1.3.0
RUN source ./setup.sh && spack env activate envs/unified-dev && \
    head -n 5 ./.bashenv > bashenv && mv ./bashenv ./.bashenv && source ./.bashenv && \
#   module spider >& mods && grep ": " mods | awk -F ":" '{print "module load " $2}' | grep -v intel >> .bashenv && \
#   sed -i '/ca-cert/d' .bashenv && \
    spack module lmod refresh -y && sed -i 's/,/ /g' .bashenv && \
    find /opt/spack-stack/spack-stack-1.3.0/envs/unified-dev/install/modulefiles -iname "*.lua" | xargs grep -l depends_on | xargs sed -i 's/depends_on/-- depends_on/g' 
#   sed -i 's/\.\.\.//g' .bashenv && sed -i 's/module load  zli/#module load zli/g' .bashenv && cp .bashenv /root/.bashenv
RUN source /root/.bashenv && module list && \
    export PATH=$PATH:/opt/fv3-bundle/build/bin:/opt/land-offline_workflow/build/bin && \
    echo "ENV PATH=$PATH" > locenvs && \
    echo "ENV MODULEPATH=$MODULEPATH" >> locenvs && \
    echo "ENV FI_PROVIDER_PATH=$FI_PROVIDER_PATH" >> locenvs && \
    echo "ENV LMOD_DEFAULT_MODULEPATH=$LMOD_DEFAULT_MODULEPATH" >> locenvs && \
    echo "ENV LMOD_PKG=$LMOD_PKG" >> locenvs && \
    echo "ENV LMOD_CMD=$LMOD_CMD" >> locenvs && \
    echo "ENV LMOD_DIR=$LMOD_DIR" >> locenvs && \
    echo "ENV MODULESHOME=$MODULESHOME" >> locenvs && \
    echo "ENV CMAKE_PREFIX_PATH=$CMAKE_PREFIX_PATH" >> locenvs && \
    echo "ENV CC=$CC" >> locenvs && \
    echo "ENV CXX=$CXX" >> locenvs && \
    echo "ENV FC=$FC" >> locenvs && \
    cp ~/.bashenv /opt/spack-stack/spack-stack-1.3.0
#RUN source ./setup.sh && spack env activate envs/unified-dev && \
#    spack gpg init && spack gpg trust unified.private && \
#    spack buildcache create --allow-root -f -d /opt/spack-mirror --only=package $(spack find --format /{hash})
#RUN source ./setup.sh && spack env activate envs/unified-dev && \
#    mkdir envs/unified-dev/install/intel/2021.8.0/esmf-8.3.0b09-au6zdfu/lib/shared && \
#    mkdir envs/unified-dev/install/intel/2021.8.0/esmf-8.3.0b09-vwu2ghr/lib/shared && \
#    mv envs/unified-dev/install/intel/2021.8.0/esmf-8.3.0b09-au6zdfu/lib/*.so envs/unified-dev/install/intel/2021.8.0/esmf-8.3.0b09-au6zdfu/lib/shared && \
#    mv envs/unified-dev/install/intel/2021.8.0/esmf-8.3.0b09-vwu2ghr/lib/*.so envs/unified-dev/install/intel/2021.8.0/esmf-8.3.0b09-vwu2ghr/lib/shared && \
#    yes | spack uninstall --all --force mapl && \
#    spack install --add mapl@2.22.0%intel@2021.8.0~debug+esma_gfe_namespace~extdata2g~fargparse~flap~ipo~pflogger+pnetcdf~shared && \
#    spack install --add mapl@2.22.0%intel@2021.8.0+debug+esma_gfe_namespace~extdata2g~fargparse~flap~ipo~pflogger+pnetcdf~shared && \
#    spack module lmod refresh -y
#RUN find /opt/spack-stack/spack-stack-1.3.0/envs/unified-dev/install/modulefiles -iname "*.lua" | xargs grep -l depends_on | xargs sed -i 's/depends_on/-- depends_on/g' && \
#    rm -rf /opt/spack-mirror /opt/build /opt/dist 
RUN rm -rf /opt/dist /opt/build /opt/spack-stack/spack-stack-1.3.0/cache/*
