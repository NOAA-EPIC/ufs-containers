FROM noaaepic/ubuntu20.04-intel-spack-unified:unified-dev-v1.4.0
WORKDIR /opt/spack-stack/spack-stack-1.4.0

ENV SHELL=/bin/bash
WORKDIR /opt
RUN git clone -b 4.0.0 https://github.com/JCSDA/jedi-bundle.git
WORKDIR /opt/jedi-bundle
RUN source /opt/spack-stack/spack-stack-1.4.0/.bashenv && \
    python -m pip install pybind11 && pip install netCDF4 && pip install numpy && \
    module load zlib/1.2.13  openblas/0.3.19 hdf5 nccmp/1.9.0.1 libpng/1.6.37 eigen/3.4.0 netcdf-c/4.9.2 && \
    module load parallel-netcdf/1.12.2 udunits/2.2.28 eckit/1.23.0 netcdf-fortran/4.6.0 parallelio/2.5.9 && \
    module load ecbuild/3.7.2 fckit/0.10.1 gsl-lite/0.37.0 fms/release-jcsda jasper/2.0.32 atlas/0.33.0 && \
    module load nco/5.0.6 crtm/v2.4.1-jedi jedi-cmake && \
    export CMAKE_PREFIX_PATH=$CMAKE_PREFIX_PATH:/usr/local/lib/python3.8/dist-packages/pybind11/share/cmake/pybind11 && \
    mkdir build && cd build && \
    ecbuild -DCMAKE_INSTALL_PREFIX=../install .. && \
    cd ../ufo && git checkout origin/develop src/ufo/operators/crtm/ufo_crtm_utils_mod.F90 && \
    cd ../build && make -j 6
#WORKDIR /opt/jedi-bundle/build
#RUN source /opt/spack-stack/spack-stack-1.4.0/.bashenv  && \
#    module load zlib/1.2.13  openblas/0.3.19 hdf5 nccmp/1.9.0.1 libpng/1.6.37 eigen/3.4.0 netcdf-c/4.9.2 && \
#    module load parallel-netcdf/1.12.2 udunits/2.2.28 eckit/1.23.0 netcdf-fortran/4.6.0 parallelio/2.5.9 && \
#    module load ecbuild/3.7.2 fckit/0.10.1 gsl-lite/0.37.0 fms/release-jcsda jasper/2.0.32 atlas/0.33.0 && \
#    module load nco/5.0.6 crtm/v2.4.1-jedi jedi-cmake && \
#    make -j 4
#RUN pip install netCDF4 && pip install numpy
WORKDIR /opt/spack-stack/spack-stack-1.4.0
RUN source /root/.bashenv && cd /opt && git clone -b release/public-v1.1.0 --recursive https://github.com/ufs-community/land-DA_workflow.git && \
    cd land-DA_workflow && mkdir build && cd build && \
    module load ecbuild/3.7.2 fckit/0.10.1 gsl-lite/0.37.0 jasper/2.0.32 atlas/0.33.0 && \
    module load libjpeg/2.1.0 pkg-config/0.29.2 curl zstd/1.5.2 esmf fms bacio/2.4.1 crtm-fix/2.4.0_emc && \
    module load git-lfs/2.9.2 crtm/2.4.0 g2/3.4.5 g2tmpl/1.10.2 ip/3.3.3 sp/2.3.3 w3emc/2.9.2 gftl gftl-shared && \
    module load yafyaml/0.5.1 mapl netcdf-c netcdf-fortran parallelio && \
    module load jasper zlib libpng hdf5 && \
    export JEDI_INSTALL=/opt/jedi-bundle/build && ecbuild .. && make -j 8
RUN cd /opt/land-DA_workflow/DA_update/jedi/fv3-jedi/Data/ && rm f* && \
    cp -r /opt/jedi-bundle/fv3-jedi/test/Data/fieldmetadata . && cp -r /opt/jedi-bundle/fv3-jedi/test/Data/fv3files .
COPY run_container_executable.sh /opt/land-DA_workflow
WORKDIR /opt/land-DA_workflow
RUN mkdir -p singularity/bin && cd singularity/bin && \
    ln -s ../../run_container_executable.sh apply_incr.exe && \
    ln -s ../../run_container_executable.sh calcfIMS.exe && \
    ln -s ../../run_container_executable.sh ufsLandDriver.exe && \
    ln -s ../../run_container_executable.sh vector2tile_converter.exe && \
    ln -s ../../run_container_executable.sh python && \
    ln -s ../../run_container_executable.sh fv3jedi_letkf.x && \
    mkdir -p /work && \
    mkdir -p /work2 && \
    mkdir -p /contrib && \
    mkdir -p /lustre  && \
    mkdir -p /scratch1 && \
    mkdir -p /scratch2 && \
    mkdir -p /glade && \
    mkdir -p /data && \
    mkdir -p /scratch && \
    mkdir -p /lfs && \
    mkdir -p /u && \
    mkdir -p /discover && \
    mkdir -p /mnt && \
    mkdir -p /lfs1 && \
    mkdir -p /lfs2 && \
    mkdir -p /lfs3 && \
    mkdir -p /lfs4 && \
    mkdir -p /export && \
    mkdir -p /Users && \
    mkdir -p /ncrc && \
    chmod +x ../../run_container_executable.sh
ENV PYTHONPATH=/opt/ioda-bundle/build/lib/pyiodaconv:/opt/ioda-bundle/build/lib/python3.8/pyioda
RUN mkdir /opt/landda-data
ADD landda-test-comps.tar.gz /opt/landda-data
ADD landda-test-inps.tar.gz /opt/landda-data
RUN cd /opt/jedi-bundle/build && source  /root/.bashenv && make -j 8 install && rm -rf * && mv ../install/* . && \
    cd /opt/spack-stack/spack-stack-1.4.0 && rm -rf spack/var/spack/cache/_source-cache/archive/* 
RUN cd /opt/land-DA_workflow && mv build/bin . && mv singularity/bin build && mv bin singularity 
