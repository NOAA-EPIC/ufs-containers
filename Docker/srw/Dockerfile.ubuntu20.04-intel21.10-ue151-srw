FROM noaaepic/ubuntu22.04-intel-spack-unified:srw-dev-v1.5.1
LABEL AUTHOR EPIC-SI

# install srw
WORKDIR /opt
RUN git clone -b develop https://github.com/ufs-community/ufs-srweather-app.git && cd ufs-srweather-app && \
    ./manage_externals/checkout_externals && mkdir build
WORKDIR /opt/ufs-srweather-app/build
#RUN sed -i 's|module load jedi-ufs-env||g' /opt/spack-stack/spack-stack-1.5.1/.bashenv 
RUN source /opt/spack-stack/spack-stack-1.5.1/.bashenv && \
     #module load stack-intel stack-intel-oneapi-mpi && \
     grep load ../modulefiles/srw_common.lua | awk -F "\"" '{print $2}' | awk -F "/" '{print "module load " $1}' > load_mods && \
     #sed -i 's/parallelio/pio/g' load_mods && \
     #sed -i 's/wrf-io/wrf_io/g'  load_mods && \
     source ./load_mods && module load fms/2023.02.01 && module list && \
     #source ./load_mods && module load libpng netcdf-c netcdf-fortran libjpeg fms/2023.02.01 && module list && \
     cmake -DCMAKE_CXX_COMPILER=mpiicpc -DCMAKE_C_COMPILER=mpiicc -DCMAKE_FC_COMPILER=mpiifort -DCMAKE_INSTALL_PREFIX=.. .. && make -j 8
#ENV LMOD_PKG=/usr/share/lmod/lmod
WORKDIR /opt/ufs-srweather-app
RUN export os=$(uname) && \
    export hardware=$(uname -m) && \
    export installer=Miniforge3-${os}-${hardware}.sh && \
    curl -L -O "https://github.com/conda-forge/miniforge/releases/download/23.3.1-1/${installer}" && \
    bash ./${installer} -bfp conda && \ 
    rm ${installer} && \
    source conda/etc/profile.d/conda.sh && \ 
    conda activate && mamba env create -n srw_app --file environment.yml && \ 
#RUN git clone https://github.com/NOAA-EPIC/miniconda3.git && \
#    cd miniconda3 && \
#    bash && \
#    ./miniconda3_install.sh /opt/miniconda3 && \
#    sed -i 's/myShellType()/"sh"/g' /opt/miniconda3/modulefiles/miniconda3/4.12.0.lua && \
#    ./miniconda3_workflow_tools_env.sh /opt/miniconda3 && \
    mkdir -p /work && \
    mkdir -p /contrib && \
    mkdir -p /lustre  && \
    mkdir -p /scratch1 && \
    mkdir -p /scratch2 && \
    mkdir -p /glade && \
    mkdir -p /data && \
    mkdir -p /scratch && \
    mkdir -p /lfs && \
    mkdir -p /u && \
    mkdir -p /discover && \
    mkdir -p /mnt && \
    mkdir -p /lfs1 && \
    mkdir -p /lfs2 && \
    mkdir -p /lfs3 && \
    mkdir -p /lfs4 && \
    mkdir /opt/ufs-srweather-app/container-bin && \
    mv /opt/ufs-srweather-app/bin/* /opt/ufs-srweather-app/container-bin && \
    mkdir -p /opt/ufs-srweather-app/container-scripts
#WORKDIR /opt/ufs
COPY srw.sh-template /opt/ufs-srweather-app/container-scripts
COPY stage-srw.sh /opt/ufs-srweather-app/container-scripts/stage-srw.sh
COPY build_singularity_intel.lua /opt/ufs-srweather-app/container-scripts/build_singularity_intel.lua
WORKDIR /opt/ufs-srweather-app
RUN rm -rf /opt/ufs /opt/build /opt/dist /etc/profile.d/modules.sh
RUN ln -s /usr/share/lmod/lmod/init/profile /etc/profile.d/modules.sh
RUN ln -s /usr/share/lmod/lmod/init/cshrc /etc/profile.d/modules.csh
RUN mkdir /opt/ufs-srweather-app/tarballs
COPY test_python.sh /opt/ufs-srweather-app/container-scripts
COPY f90nml.tar.gz /opt/ufs-srweather-app/tarballs
COPY Jinja2-3.1.2.tar.gz /opt/ufs-srweather-app/tarballs
COPY MarkupSafe-2.1.2.tar.gz /opt/ufs-srweather-app/tarballs
COPY PyYAML-6.0.tar.gz /opt/ufs-srweather-app/tarballs
RUN chmod -R a+rx /opt/ufs-srweather-app/container-scripts
RUN chmod -R a+rx /opt/ufs-srweather-app/tarballs

# Update env
WORKDIR /opt/spack-stack
RUN sed -i 's|ENV|export|g' srw.envs && source srw.envs
