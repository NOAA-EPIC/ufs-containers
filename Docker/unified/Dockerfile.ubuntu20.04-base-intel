FROM ubuntu:20.04 as build
RUN mkdir -p /opt/build && mkdir -p /opt/dist
RUN apt-get update &&   DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends     ca-certificates curl &&   rm -rf /var/lib/apt/lists/*
# install cmake
RUN cd /opt/build &&     curl -LO https://github.com/Kitware/CMake/releases/download/v3.23.1/cmake-3.23.1-linux-x86_64.sh && /bin/bash cmake-3.23.1-linux-x86_64.sh --prefix=/usr/local --skip-license
RUN apt update -y --allow-unauthenticated
RUN apt-get update -yq --allow-unauthenticated
RUN apt install -y lmod && \
    apt install -y tzdata && \
    ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime && \
    dpkg-reconfigure --frontend noninteractive tzdata && \
    apt -y install build-essential git vim python3 wget libexpat1-dev lmod bc time && \
    apt-get install -yq libtiff-dev git-lfs python3-distutils python3-pip wget m4 unzip curl
RUN apt-get install -y --no-install-recommends apt-utils
RUN echo "dash dash/sh boolean false" | debconf-set-selections
RUN DEBIAN_FRONTEND=noninteractive dpkg-reconfigure dash
RUN ls -l /bin/sh
RUN mkdir -p /opt
WORKDIR /opt
RUN git clone -b develop --recursive https://github.com/NOAA-EMC/spack-stack.git
WORKDIR spack-stack
RUN pwd && ls -l /bin/sh && sed -i 's/source/./g' ./setup.sh && . ./setup.sh && spack install intel-oneapi-compilers && \
    ls -l /bin/sh  && \
    pwd && ls -l && . ./setup.sh && spack install intel-oneapi-compilers && \
    spack install intel-oneapi-mpi && spack compiler list && spack find && \
    spack compiler add `spack location -i intel-oneapi-compilers`/compiler/latest/linux/bin/intel64 && spack compiler list && \
    spack compiler rm gcc@9.4.0
ENV PATH="${PATH}:/usr/local"
#this module.yaml file sets the format for tcl modules built by spack to have no extra hashes
COPY modules.yaml spack/etc/spack/defaults
#Add the intel compiler to spack and find externals, then install any general packages (cmake) that don't need to be 
#part of the concretization
RUN . ./setup.sh && \
    spack compiler add && \
    spack external find wget && \
    spack external find m4 && \
    spack external find git && \
    spack external find curl && \
    spack external find git-lfs && \
    spack external find openssl && \
    spack external find libjpeg-turbo && \
    spack external find perl && \
    spack external find python && \
    spack install cmake@3.19.8 && \
    spack install curl@7.49.1 && \
    spack module tcl refresh -y --delete-tree && source /usr/share/lmod/lmod/init/bash && module avail

#set up modules to be loaded automatically when shelling into the container
RUN . ./setup.sh && \
    echo "source /usr/share/lmod/lmod/init/bash" >> /root/.bashenv && \
    echo "module use $MODULEPATH" >> /root/.bashenv && \
    echo "module load cmake/3.22.1 intel-oneapi-compilers intel-oneapi-mpi " >> /root/.bashenv && \
    echo "[[ -s ~/.bashenv ]] && source ~/.bashenv" >> /root/.bash_profile && \
    echo "[[ -s ~/.bashenv ]] && source ~/.bashenv" >> /root/.bashrc
RUN apt update && apt install -y libboost1.71-dev &&\
    apt install -y libboost-chrono1.71-dev &&\
    apt install -y libboost-date-time1.71-dev &&\
    apt install -y libboost-exception1.71-dev &&\
    apt install -y libboost-filesystem1.71-dev &&\
    apt install -y libboost-program-options1.71-dev &&\
    apt install -y libboost-python1.71-dev &&\
    apt install -y libboost-regex1.71-dev &&\
    apt install -y libboost-serialization1.71-dev &&\
    apt install -y libboost-system1.71-dev &&\
    apt install -y libboost-test1.71-dev &&\
    apt install -y libboost-thread1.71-dev &&\
    apt install -y libboost-timer1.71-dev && \
    apt install -y python3.8-venv

